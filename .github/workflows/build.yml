name: Build and test

on: [pull_request]

jobs:
  build:
    env:
      TEST_TIMEOUT_MINUTES: 30
    timeout-minutes: 30 # we have a locking issue, so cap the runs at ~20m to account for varying build times, etc
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        dotnet-version: ["", "6.0.x", "7.0.x"]
        # these entries will mesh with the above combinations
        include:
          # just use what's in the repo
          - global-json-file: "global.json"
            dotnet-version: ""
            include-prerelease: false
            label: "repo global.json"
            build_net7: false
            test_tfm: net6.0
          # latest 6.0 stable
          - global-json-file: "global.json"
            dotnet-version: "6.0.x"
            include-prerelease: false
            label: "6.0 stable"
            build_net7: false
            test_tfm: net6.0
          # latest 7.0 preview
          - global-json-file: "global.json"
            dotnet-version: "7.0.x"
            include-prerelease: true
            label: "7.0 preview"
            build_net7: true
            test_tfm: net7.0
      fail-fast: false # we have timing issues on some OS, so we want them all to run

    runs-on: ${{ matrix.os }}

    name: Build on ${{matrix.os}} for ${{ matrix.label }}

    steps:
    - uses: actions/checkout@v3

    # setup .NET per the repo global.json
    - name: Setup .NET
      uses: actions/setup-dotnet@v2

    # setup .NET per test session
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        include-prerelease: ${{ matrix.include-prerelease }}
        global-json-file: ${{ matrix.global-json-file }}
        dotnet-version: ${{ matrix.dotnet-version }}

    # remove global.json so that the env configuration takes precedence
    - name: Purge global.json
      run: rm global.json

    # let's make sure we're on the version we think we are.
    - name: Announce .NET version
      run: dotnet --info

    - name: Restore tools
      run: dotnet tool restore

    - name: Run Build
      run: dotnet run --project build -t Build

    - name: Run and report tests
      run: dotnet test -c Release -f ${{ matrix.test_tfm }} --no-restore --no-build --no-build --logger GitHubActions /p:AltCover=true /p:AltCoverAssemblyExcludeFilter="System.Reactive|FSharp.Compiler.Service|Ionide.ProjInfo|FSharp.Analyzers|Analyzer|Humanizer|FSharp.Core|FSharp.DependencyManager"
      working-directory: test/FsAutoComplete.Tests.Lsp
      env:
        BuildNet7: ${{ matrix.build_net7 }}
