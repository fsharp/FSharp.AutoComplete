{
  "Kind": "info",
  "Data": "Synchronous parsing started"
}
{
  "Kind": "errors",
  "Data": {
    "File": "<absolute path removed>/FsAutoComplete.IntegrationTests/Tooltips/Script.fsx",
    "Errors": []
  }
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "val funky :\n   x: int \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.XA.funky\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "module CommandResponse",
        "Comment": "",
        "Footer": "Full name: Script.CommandResponse\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "type ResponseMsg<'T>\n  member f : y: 'a -> int",
        "Comment": "",
        "Footer": "Full name: Script.CommandResponse.ResponseMsg`1\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "val funky :\n   x: int \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.XA.funky\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "val funct :\n   x: CommandResponse.ResponseMsg<'a> \n   -> unit",
        "Comment": "\n\nsome random xml docs",
        "Footer": "Full name: Script.funct\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "type Abcd\n  new  new : unit ->  Abcd\n  member Add : a: int  *b: int -> int + 2 overloads\n  property asdfg :  int  with get\n  property bnm :  int  with get,set\n  property cvbnm :  int  with get,set",
        "Comment": "\n\nSample type",
        "Footer": "Full name: Script.Abcd\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "member asdfg :\n   : unit \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.Abcd.asdfg\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "member bnm :\n   : unit \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.Abcd.bnm\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "member cvbnm :\n   : unit \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.Abcd.cvbnm\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "type Desf\n  property b :  int  with get",
        "Comment": "",
        "Footer": "Full name: Script.Desf\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "member",
        "Comment": "Used to declare a property or method in an object type.",
        "Footer": ""
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "type Qwer =\n  | A of string\n| B of int * float\n| C",
        "Comment": "",
        "Footer": "Full name: Script.Qwer\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "enum Gjk =\n  | Q = 1\n| W = 2\n| E = 3",
        "Comment": "",
        "Footer": "Full name: Script.Gjk\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "type",
        "Comment": "Used to declare a class, record, structure, discriminated union, enumeration type, unit of measure, or type abbreviation.",
        "Footer": ""
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "val ( >=> ) :\n   a: int ->\n   b: int \n   -> int",
        "Comment": "",
        "Footer": "Full name: Script.( >=> )\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "val ( |Even|Odd| ) :\n   input: int \n       -> Choice<unit,unit>",
        "Comment": "",
        "Footer": "Full name: Script.( |Even|Odd| )\nAssembly: Script"
      }
    ]
  ]
}
{
  "Kind": "tooltip",
  "Data": [
    [
      {
        "Signature": "active recognizer Even: \n   input: int \n       -> Choice<unit,unit>",
        "Comment": "",
        "Footer": "Full name: Script.( |Even|Odd| ).Even\nAssembly: Script"
      }
    ]
  ]
}
