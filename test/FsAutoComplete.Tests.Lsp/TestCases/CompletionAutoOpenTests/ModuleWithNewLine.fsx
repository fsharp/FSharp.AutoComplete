module OpenNamespace.RootModule

let foo: Regex(*1,0*) =
  Regex(*1,0*)

type T = {
  Value: Regex(*1,0*)
}
with
  member _.Foo () =
    Regex(*1,0*)

module Nested1 =
  let foo =
    Regex(*-1,|-2*)

  type T = {
    Value: Regex(*-4,|-2*)
  }
  with
    member _.Foo () =
      Regex(*-8,|-4*)
  
  module Nested11 =
    let foo =
      Regex(*-1,|-2*)

module Nested2 =

  let foo =
    Regex(*-2,|-2*)

  module Nested21 =

    let foo =
      Regex(*-2,|-2*)

module Nested3 =
  open System

  let foo =
    Regex(*-2,|-2*)

  module Nested31 =
    open System

    let foo =
      Regex(*-2,|-2*)

module Nested4 =
  open System
  let foo =
    Regex(*-1,|-2*)

  module Nested41 =
    open System
    let foo =
      Regex(*-1,|-2*)

module Nested5 =
  let bar () = ()

  let foo =
    Regex(*-3,|-2*)

  module Nested51 =
    let bar () = ()

    let foo =
      Regex(*-3,|-2*)

module Nested6 =
  module Nested51 =
    let foo =
      Regex(*-1,|-2*)

  let foo =
    Regex(*-5,|-2*)
  